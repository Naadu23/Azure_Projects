
AZURE MANAGED IDENTITIES AS A SERVICE
Managed identities, originally Managed Service Identity (MSI), is a service provided by Azure for Azure resources that primarily eliminates the requirement for developers to manage credentials. The Azure portal records it as an identity service.  Applications can use Managed Identities, an Azure Active Directory feature, to manage identities automatically when connecting to resources that acknowledge Azure Active Directory (Azure AD) authentication.
Managed identity can be defined as a special-purpose service principal that can only be used with Azure resources. It links a service principal object to an azure resource. A service principal is a program in Azure Active Directory that has permission to authenticate and access Azure resources or resource groups based on the Role Based Access Control (RBAC).

System-assigned and user-assigned identities are the two main categories of managed identities. System-assigned automatically manages the identity lifecycle because managed identities are created as a component of the Azure resource and share its lifecycle. In other words, when the Azure resource is deleted, the identity is also deleted. System-assigned managed identities are typically used for workloads where users require independent identities because such identities cannot be shared with multiple resources. In contrast to the preceding, user-assigned managed identities are independent of the created Azure resources, requiring manual management of the created resources' lifecycle. Since user-assigned managed identities can be shared across multiple resources, they are typically used for workloads where resources are frequently recycled but permissions are maintained.

If I were to use managed identities as a user, I would first create a managed identity in Azure, selecting either system-assigned or user-assigned managed identity. Once the managed identity has been linked to the "source" Azure Resource, I have defined the source resource. This is most common with user-assigned managed identities. The managed identity is then given permission by me to access the "target" service. Lastly,I will access a resource using the managed identity.

Prior to managed identities, users had to manually set, rotate, and clean up credentials.Additionally necessary were the manual creation or deletion of service principals, permissions, and the storing of credentials in resources. Thanks to managed identities, users can now create resources, grant permissions, and delete resources as required without having to manually rotate and clean up credentials, among other essential security tasks. All aspects of credential rotation, storage, and cleanup are handled for the user by Azure, whereas previously they had to be done manually.

I discovered a few tasks I could carry out with managed identities, such as using system-assigned managed identities to enable or disable managed identities at the resource level, granting permissions using role-based access control (RBAC), reviewing or viewing create, read, update, and delete (CRUD) operations in Azure Activity logs, and viewing sign-in activity in Azure AD sign-in logs.

The Azure portal, Azure CLI, PowerShell, REST APIs, Azure Resource Manager templates, and other tools can all be used to perform operations on managed identities. Powershell and CLI usage necessitates script writing and the knowledge of a few programming languages, including SQL, C#, Java, and Javascript.
I'll try to learn the basics of programming languages because I may have trouble using them because I don't have any experience using them in practice. In addition, if the need arises, I might study or conduct research. I believe that once I begin hands-on exercises, I will discover a more straightforward method. The more I explored, the more comfortable I would become with the necessary codes.

In conclusion, using managed identities has a few key advantages, including not needing to manage credentials since they aren't even visible to the user, being able to use managed identities to log in to any resource that supports Azure AD authentication, including the user's own applications, and the fact that managed identities are free to use.

REFERENCE - Microsoft Docs
